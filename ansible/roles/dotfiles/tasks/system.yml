---
- name: Create NetworkManager conf.d dir
  become: true
  file:
    path: /etc/NetworkManager/conf.d
    state: directory

- name: Disable Wireless powersave
  become: true
  when: wifi_disable_powersave
  block:
    - name: Disable power save for Wireless device
      copy:
        content: |
          [connection]
          wifi.powersave = 2
        dest: /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf
      register: wifi_powersave


- name: Disable systemd-resolved
  become: true
  when: disable_systemd_resolved
  block:
    - name: Disable systemd-resolved
      service:
        name: systemd-resolved
        state: stopped
        enabled: false
      register: _disable_resolved

    - name: Set dns to default in Network Manger
      ini_file:
        path: /etc/NetworkManager/NetworkManager.conf
        section: main
        option: dns
        value: default
        no_extra_spaces: true

    - name: Clear resolv.conf file
      file:
        path: /etc/resolv.conf
        state: absent
      when: _disable_resolved.changed

    - name: Restart NetworkManager
      service:
        name: NetworkManager
        state: restarted
      when: _disable_resolved.changed or wifi_powersave is defined and wifi_powersave.changed
      register: _nm_restarted

    - name: Wait few seconds before continue
      ansible.builtin.pause:
        seconds: 30
      when: _nm_restarted.changed

# More info: https://wiki.archlinux.org/title/NetworkManager
- name: Enable dnsmasq to make DNS lookups of VPN hosts will be routed to the relevant VPN's DNS servers
  become: true
  when: nm_dns_workaround
  block:
    - name: Enable dnsmasq
      ansible.builtin.copy:
        content: |
          [main]
          dns=dnsmasq
        dest: /etc/NetworkManager/conf.d/dns.conf
      register: _enable_dnsmasq

    - name: Set cache for dnsmasq
      ansible.builtin.copy:
        content: |
          cache-size=10000
        dest: /etc/NetworkManager/dnsmasq.d/cache.conf
      register: _dnsmasq_cache

    - name: Restart NetworkManager
      ansible.builtin.systemd:
        name: NetworkManager
        state: restarted
      when: _enable_dnsmasq.changed or _dnsmasq_cache.changed
      register: _nm_restarted

- name: Configure powertop service
  become: true
  when: enable_powertop
  block:
    - name: Create service file
      copy:
        content: |
          [Unit]
          Description=PowerTOP auto tune

          [Service]
          Type=oneshot
          Environment="TERM=dumb"
          RemainAfterExit=true
          ExecStart=/usr/sbin/powertop --auto-tune

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/powertop.service

    - name: Enable powertop service
      service:
        name: powertop
        state: started
        enabled: true
        daemon-reload: true


- name: Enable podman socket
  shell: |
    systemctl --user enable --now podman.socket

- name: Increase sysctl values
  become: true
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  loop: "{{ sysctl_params }}"

- name: Enable nested virtualization
  include_tasks: nested_virt.yml
  when: enable_nested_virtualization

- name: Add user to libvirt group
  become: true
  user:
    name: "{{ ansible_user_id }}"
    groups: libvirt
    append: true

- name: Change journal size
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/systemd/journald.conf
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
    create: true
  loop:
    - regex: '^#SystemMaxUse='
      line: 'SystemMaxUse=500M'
    - regex: '^#SystemMaxFileSize='
      line: 'SystemMaxFileSize=100M'

# Trying to fix sound issue
- name: Remove alsa state daemon file
  become: true
  ansible.builtin.file:
    path: /etc/alsa/state-daemon.conf
    state: absent

- name: Disable automatic suspend after a while
  ansible.builtin.command: xset s off

- name: Disable automatic suspend after a while - do also as root
  become: true
  ansible.builtin.command: xset s off
