---
- name: Copy vim config
  copy:
    src: /tmp/dotfiles/vimrc/init.vim
    dest: ~/.vimrc
    remote_src: true

- name: Ensure directories exists
  file:
    path: ~/.vim/autoload
    state: directory

- name: Download vim plug
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: ~/.vim/autoload/plug.vim
    mode: "0644"

- name: Create vim directory
  file:
    path: ~/.vim/plugin_conf
    state: directory
    recurse: true

- name: Copy config files
  copy:
    src: "/tmp/dotfiles/vimrc/{{ item }}"
    dest: "~/.vim/{{ item }}"
    remote_src: true
  loop:
    - "general.vim"
    - "plugins_conf.vim"
    - "plugins.vim"

- name: Copy config files
  copy:
    src: "/tmp/dotfiles/vimrc/plugin_conf/{{ item }}"
    dest: "~/.vim/plugin_conf/{{ item }}"
    remote_src: true
  loop:
    - "coc"

- name: Copy vimrc file
  copy:
    src: "/tmp/dotfiles/vimrc/init.vim"
    dest: "~/.vimrc"
    remote_src: true

- name: Ensure directories exists
  file:
    path: ~/.config/nvim/autoload
    state: directory

- name: Download vim plug
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: ~/.config/nvim/autoload/plug.vim
    mode: "0644"
  when: vim_distro == 'neovim'

- name: Setup Neovim
  include_tasks: neovim.yml
  when: vim_distro == 'neovim'

- name: Create symbolic link between vimrc and nvim init
  file:
    src: ~/.vimrc
    dest: ~/.config/nvim/init.vim
    state: link

- name: Configure vim coc
  environment:
    PATH: ~/.local/bin:/usr/local/bin/:{{ ansible_env.PATH }}
  block:
    - name: Install vim plugins - vim
      shell: |
        vim +PlugInstall +qall
      when: vim_distro == 'vim'

    - name: Install vim plugins - neovim
      shell: |
        ~/.local/nvim/usr/bin/nvim +PlugInstall +qall
      when: vim_distro == 'neovim'

- name: Install additional packages for vim
  pip:
    name:
      - types-PyYAML
      - types-requests
      - pylama
      - neovim
      - mypy
      - pynvim
      - rstcheck
      - proselint
      - gitlint
      - ansible-lint
      - black
      - yapf
      - vim-vint
      - yamllint
      - jedi
      - pylint
    extra_args: --user
  when: pip_packages

- name: Install additional npm packages
  become: true
  environment:
    PATH: ~/.local/bin:/usr/local/bin/:{{ ansible_env.PATH }}
  shell: |
    npm install -g prettier eslint
