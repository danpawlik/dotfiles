---
- name: Copy vim config
  copy:
    src: /tmp/dotfiles/vimrc/init.vim
    dest: ~/.vimrc
    remote_src: true

- name: Ensure directories exists
  file:
    path: ~/.vim/autoload
    state: directory

- name: Download vim plug
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: ~/.vim/autoload/plug.vim
    mode: "0644"

- name: Create vim directory
  file:
    path: ~/.vim/plugin_conf
    state: directory
    recurse: true

- name: Copy config files
  copy:
    src: "/tmp/dotfiles/vimrc/{{ item }}"
    dest: ~/.vim/
    remote_src: true
  loop:
    - "general.vim"
    - "plugins_conf.vim"
    - "coc_conf.vim"
    - "plugins.vim"
    - "lua"

- name: Copy config files
  copy:
    src: "/tmp/dotfiles/vimrc/plugin_conf/{{ item }}"
    dest: "~/.vim/plugin_conf/{{ item }}"
    remote_src: true
  loop:
    - "coc"

- name: Copy vimrc file
  copy:
    src: "/tmp/dotfiles/vimrc/init.vim"
    dest: "~/.vimrc"
    remote_src: true

- name: Ensure directories exists
  file:
    path: ~/.config/nvim/autoload
    state: directory

- name: Download vim plug
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: ~/.config/nvim/autoload/plug.vim
    mode: "0644"

- name: Setup Neovim
  include_tasks: neovim.yml

- name: Create symbolic link between vimrc and nvim init
  file:
    src: ~/.vimrc
    dest: ~/.config/nvim/init.vim
    state: link

- name: Create symlink to lua dir
  ansible.builtin.file:
    src: ~/.vim/lua
    dest: ~/.config/nvim/lua
    state: link

- name: Clone nvim-lspconfig
  ansible.builtin.git:
    repo: https://github.com/neovim/nvim-lspconfig
    dest: /tmp/nvim-lspconfig

- name: Copy lspconfig and lspconfig.lua
  ansible.builtin.copy:
    src: "/tmp/nvim-lspconfig/lua/{{ item.src }}"
    dest: "~/.vim/lua/{{ item.dest }}"
    remote_src: true
  loop:
    - src: lspconfig.lua
      dest: lspconfig.lua
    - src: lspconfig/
      dest: lspconfig

- name: Clone nvim-treesitter
  ansible.builtin.git:
    repo: https://github.com/nvim-treesitter/nvim-treesitter
    dest: /tmp/nvim-treesitter

- name: Copy nvim-treesitter and nvim-treesitter.lua
  ansible.builtin.copy:
    src: "/tmp/nvim-treesitter/lua/{{ item.src }}"
    dest: "~/.vim/lua/{{ item.dest }}"
    remote_src: true
  loop:
    - src: nvim-treesitter.lua
      dest: nvim-treesitter.lua
    - src: nvim-treesitter/
      dest: nvim-treesitter

- name: Configure vim coc
  when: nvim_use_coc
  block:
    # NOTE: there is no need to comment lua config, when Mason
    # packages are not installed.
    - name: Enable vim-coc config
      ansible.builtin.lineinfile:
        path: ~/.vimrc
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - regexp: '^" source $HOME/.vim/plugin_conf/coc'
          line: 'source $HOME/.vim/plugin_conf/coc'
        - regexp: '^" source $HOME/.vim/coc_conf.vim'
          line: 'source $HOME/.vim/coc_conf.vim'

    - name: Uncomment coc plugin
      ansible.builtin.lineinfile:
        path: ~/.vim/plugins.vim
        regexp: |
          " Plug 'neoclide/coc.nvim', { 'branch': 'release' }
        line: "Plug 'neoclide/coc.nvim', { 'branch': 'release' }"

- name: Install neovim plugins
  shell: |
    ~/.local/nvim/usr/bin/nvim --headless +PlugInstall +qall

- name: Install mason packages
  when: not nvim_use_coc
  ansible.builtin.shell: |
    ~/.local/nvim/usr/bin/nvim --headless -c "MasonInstall {{ mason_packages | join(' ') }}" -c qall

- name: Install treesitter packages
  when: not nvim_use_coc
  ansible.builtin.shell: |
    ~/.local/nvim/usr/bin/nvim --headless -c "TSInstall {{ treesitter_packages | join(' ') }}" -c qall

    # NOTE: Mason is installing packages in venv or node_modules dir.
    # No need to install packages one more time, when it would be not used by vim.
    - name: Install additional packages for neovim when coc config set
      when: pip_packages
      pip:
        name: "{{ pip_packages }}"
        extra_args: --user --force-reinstall

    - name: Install gopls
      ansible.builtin.shell: |
        go install golang.org/x/tools/gopls@latest

- name: Add PATH to bashrc
  lineinfile:
    path: ~/.bashrc
    regexp: "export PATH"
    line: "export PATH=~/.local/share/nvim/mason/bin/:~/.local/bin:~/go/bin:/usr/local/bin/:{{ ansible_env.PATH }}"
