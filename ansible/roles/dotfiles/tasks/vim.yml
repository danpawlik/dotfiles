---
- name: Copy vim config
  copy:
    src: /tmp/dotfiles/vimrc/init.vim
    dest: ~/.vimrc
    remote_src: true

- name: Install vim-plug no metter what distro
  shell: |
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

- name: Create vim directory
  file:
    path: ~/.vim/plugin_conf
    state: directory
    recurse: true

- name: Copy config files
  copy:
    src: "/tmp/dotfiles/vimrc/{{ item }}"
    dest: "~/.vim/{{ item }}"
    remote_src: true
  loop:
    - "general.vim"
    - "plugins_conf.vim"
    - "plugins.vim"

- name: Copy config files for vim_config
  copy:
    src: "/tmp/dotfiles/vimrc/plugin_conf/{{ item }}"
    dest: "~/.vim/plugin_conf/{{ item }}"
    remote_src: true
  loop:
    - "ycm"
    - "coc"

- name: Copy vimrc file
  copy:
    src: "/tmp/dotfiles/vimrc/init.vim"
    dest: "~/.vimrc"
    remote_src: true

- name: Setup Neovim
  block:
    - name: Install vim-plug - neovim
      shell: |
        curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      when: vim_distro == 'neovim'

    - name: Download Neovim appimage
      shell: |
        curl -L "https://github.com/neovim/neovim/releases/download/{{ nvim_version }}/nvim.appimage" -o /tmp/nvim.appimage ;
        cd /tmp/;
        chmod u+x /tmp/nvim.appimage ;
        ./nvim.appimage --appimage-extract

    - name: Create local dir if not exists
      file:
        path: ~/.local
        state: directory

    - name: Copy extracted neovim and make symlink to local bin
      shell: |
        cp -a /tmp/squashfs-root/ ~/.local/nvim

    - name: Create symbolic link between vimrc and nvim init
      file:
        src: ~/.vimrc
        dest: ~/.config/nvim/init.vim
        state: link

    - name: Create symlink neovim to local bin
      file:
        src: ~/.local/nvim/usr/bin/nvim
        dest: ~/.local/bin/nvim
        state: link

    - name: Create symlink from neovim to vim
      file:
        src: ~/.local/nvim/usr/bin/nvim
        dest: ~/.local/bin/vim
        state: link

  when: vim_distro == 'neovim'

# Copy vim config files and run plugged
- name: Configure plugin for YouCompleteMe
  block:
    - name: Uncomment ycm in vimrc
      lineinfile:
        path: ~/.vimrc
        regexp: ".*ycm"
        line: "source $HOME/.vim/plugin_conf/ycm"

    - name: Uncomment ycm in vim plugins file
      lineinfile:
        path: ~/.vim/plugins.vim
        regexp: ".*YouCompleteMe"
        line: "Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }"
  when: vim_config == 'ycm'

- name: Configure plugin for COC
  block:
    - name: Uncomment coc in vimrc
      lineinfile:
        path: ~/.vimrc
        regexp: ".*coc"
        line: "source $HOME/.vim/plugin_conf/coc"

    - name: Uncomment coc in vim plugins file
      lineinfile:
        path: ~/.vim/plugins.vim
        regexp: ".*coc"
        line: "Plug 'neoclide/coc.nvim', { 'branch': 'release' }"
  when: vim_config == 'coc'

### YCM ###
- name: Configure YouCompleteMe
  environment:
    PATH: ~/.local/bin:/usr/local/bin/:{{ ansible_env.PATH }}
  block:
    - name: Install additional packages
      become: true
      package:
        name:
          - automake
          - gcc
          - gcc-c++
          - kernel-devel
          - cmake
          - make
          - python3-devel
          - golang
        state: present

    - name: Install packages when Centos 7
      become: true
      package:
        name:
          - devtoolset-8
          - centos-release-scl
          - cmake
          - scl-utils
        state: present
      when: ansible_distribution == 'CentOS' and ansible_lsb.major_release|int <= 7

    - name: Install vim plugins - vim
      shell: |
        vim +PlugInstall +qall
      when: vim_distro == 'vim'

    - name: Install vim plugins - neovim
      shell: |
        ~/.local/nvim/usr/bin/nvim +PlugInstall +qall
      when: vim_distro == 'neovim'

    - name: Install YCM on Centos 7
      shell: |
        scl enable devtoolset-8 - << \EOF
          ~/.vim/plugged/YouCompleteMe/install.py --all
        EOF
      when: ansible_distribution == 'CentOS' and ansible_lsb.major_release|int <= 7

    - name: Install YCM on Centos 8 and later
      shell: |
        ~/.vim/plugged/YouCompleteMe/install.py --all
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora' and ansible_lsb.major_release|int >= 8
  when: vim_config == 'ycm'

### COC ###
- name: Configure vim coc
  environment:
    PATH: ~/.local/bin:/usr/local/bin/:{{ ansible_env.PATH }}
  block:
    - name: Install vim plugins - vim
      shell: |
        vim +PlugInstall +qall
      when: vim_distro == 'vim'

    - name: Install vim plugins - neovim
      shell: |
        ~/.local/nvim/usr/bin/nvim +PlugInstall +qall
      when: vim_distro == 'neovim'
  when: vim_config == 'coc'

- name: Install additional packages for vim
  pip:
    name:
      - types-PyYAML
      - types-requests
      - pylama
      - neovim
      - mypy
      - pynvim
      - rstcheck
      - proselint
      - gitlint
      - ansible-lint
      - black
      - yapf
      - vim-vint
      - yamllint
      - jedi
      - pylint
    extra_args: --user
  when: pip_packages

- name: Install additional npm packages
  become: true
  environment:
    PATH: ~/.local/bin:/usr/local/bin/:{{ ansible_env.PATH }}
  shell: |
    npm install -g prettier eslint
