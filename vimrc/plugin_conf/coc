" basic plugins
let g:coc_global_extensions = [ "coc-git", "coc-jedi", "coc-pyright", "coc-go", "coc-snippets", "coc-docker", "coc-vimlsp", "coc-stylelintplus", "coc-sh" ]
" other basic plugins
let g:coc_global_extensions += [ "coc-yaml", "coc-html", "coc-markdownlint", "coc-prettier", "coc-pairs", "coc-helper", "coc-spell-checker" ]
" web
let g:coc_global_extensions += [ "coc-react-refactor", "coc-json", "coc-html-css-support", "coc-eslint", "coc-tsserver" ]
" dev
let g:coc_global_extensions += [ "coc-clangd" ]
" other
let g:coc_global_extensions += [ "coc-marketplace" ]

" to check
" let g:coc_global_extensions += [ "coc-lua", "coc-rls", "coc-ultisnips" ]

" Disable coc reason
" coc-reason

let g:coc_user_config = {}
let g:coc_user_config['languageserver'] = {}

" Other languages: https://github.com/neoclide/coc.nvim/wiki/Language-servers
let g:coc_user_config['languageserver']['golang'] = {
    \ "command": "gopls",
    \ "rootPatterns": ["go.mod"],
    \ "filetypes": ["go"]
    \}

let g:coc_user_config['languageserver']['dhall'] = {
    \ "command": "dhall-lsp-server",
    \ "filetypes": [ "dhall" ]
    \ }

let g:coc_user_config['languageserver']['dockerfile'] = {
    \ "command": "docker-langserver",
    \ "filetypes": ["dockerfile"],
    \ "args": ["--stdio"]
    \ }

let g:coc_user_config['languageserver']['haskell'] = {
    \ "command": "haskell-language-server-wrapper",
    \ "args": ["--lsp"],
    \ "rootPatterns": [ "*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml" ],
    \ "filetypes": [ "haskell", "ihaskell" ]
    \ }

let g:coc_user_config['languageserver']['rust'] = {
    \ "command": "rust-analyzer",
    \ "filetypes": ["rust"],
    \ "rootPatterns": ["Cargo.toml"]
    \ }

let g:coc_user_config['coc.preferences.formatOnSaveFiletypes'] = ['go']
let g:coc_user_config['suggest.floatEnable'] = v:false
let g:coc_user_config['suggest.enablePreview'] = v:true
let g:coc_user_config['diagnostic.checkCurrentLine'] = v:true

let g:coc_user_config['python.defaultInterpreter'] = v:true
let g:coc_user_config['python.jediEnabled'] = v:true
let g:coc_user_config['python.formatting.provider'] = "yapf"
let g:coc_user_config['python.linting.flake8Enabled'] = v:true
let g:coc_user_config['python.linting.mypyEnabled'] = v:false
let g:coc_user_config['coc.preferences.formatOnType'] = v:false
let g:coc_user_config['diagnostic-languageserver.filetypes'] = {"sh": "shellcheck"}
let g:coc_user_config['markdownlint.config.default'] = v:true
let g:coc_user_config['markdownlint.config.line_length'] = v:false

" https://github.com/josa42/coc-go
" let g:coc_user_config['go.goplsOptions'] = {"deepCompletion": v:true, "completeUnimported": v:true, "gofumpt": v:true}
let g:coc_user_config['go.goplsOptions'] = {"deepCompletion": v:true, "completeUnimported": v:true}
